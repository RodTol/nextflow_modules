include { initOptions } from './functions'

params.options = [:]
options = initOptions(params.options)  // takes as input the set of arguments

// Extract

process SEQUENZA_EXTRACT {
    publishDir "${params.out_dir}", mode: "copy"
    //   saveAs: { filename -> saveFiles(filename:filename, options:params.options, publish_dir:getSoftwareName(task.process), meta:meta, publish_by_meta:['id']) }

    input:  // as input the seqz files path
    path(seqzFile)

    output:
    // sequenza.results already creates files
    path("*")  // the outputs are all the files generated by sequenza.results

    script:
    
    """
    #!/usr/bin/env Rscript
    
    library(sequenza)

    chromosomes = 1:24
    if ($options.is_female)
      chromosomes = 1:23
   
    seqzExt <- sequenza.extract(
      file = "$seqzFile",
      chromosome.list = chromosomes,
      normalization.method = $options.norm_method,
      window = $options.window,
      gamma = $options.gamma,
      kmin = $options.kmin,
      min.reads.baf = $options.min_reads_baf,
      min.reads = $options.min_reads,
      min.reads.normal = $options.min_reads_normal,
      max.mut.types = $options.max_mut_types
      )

    paraSpace <- sequenza.fit(
      sequenza.extract = seqzExt,
      cellularity = seq($options.low_cell, $options.up_cell, 0.01),
      ploidy = seq($options.low_ploidy, $options.up_ploidy, 0.1),
      # chromosome.list = chr.fit,
      chromosome.list = chromosomes,
      female = as.logical($options.is_female)
      )

    sequenza.results(
      sequenza.extract = seqzExt,
      cp.table = paraSpace,
      sample.id = $options.sample_id,
      out.dir = $options.out_dir,  # should it be the process folder?
      female = as.logical($options.is_female)
      )
    """
}

